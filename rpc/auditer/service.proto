syntax = "proto3";

package tofraley.audity.auditer;
option go_package = "github.com/tofraley/audity/rpc/auditer";

// Auditer service handles audits for clients.
service Auditer {
  // RecordNpmAudit records a new npm audit for a project 
  rpc RecordNpmAudit(NpmAuditRequest) returns (NpmAuditResponse);
}

message NpmAuditResponse {
  bool success = 1;
}

message NpmAuditRequest {
  string project_name = 1;
  NpmAuditResult result = 2;
}

message NpmAuditResult {
  int64 audit_time = 1;
  map<string, Metadata> metadata = 2;
  repeated Vulnerability vulnerabilities = 3;
  int32 total_dependencies = 4;
  int32 total_dev_dependencies = 5;
  int32 total_optional_dependencies = 6;
  int32 total_vulnerabilities = 7;
  AuditSummary summary = 8;
}

message Metadata {
  repeated string values = 1;
}

message Vulnerability {
  string id = 1;
  string url = 2;
  string title = 3;
  string severity = 4;
  repeated string vulnerable_versions = 5;
  string module_name = 6;
  string vulnerable_functions = 7;
  repeated string cves = 8;
  string access = 9;
  string patched_versions = 10;
  string cwe = 11;
  repeated Finding findings = 12;
  string updated = 13;
  string recommendation = 14;
}

message Finding {
  string version = 1;
  repeated string paths = 2;
}

message AuditSummary {
  int32 info = 1;
  int32 low = 2;
  int32 moderate = 3;
  int32 high = 4;
  int32 critical = 5;
}