syntax = "proto3";

package tofraley.audity.auditer;
option go_package = "github.com/tofraley/audity/rpc/auditer";

// Auditer service handles audits for clients.
service Auditer {
  // RecordNpmAudit records a new npm audit for a project 
  rpc RecordNpmAudit(NpmAuditRequest) returns (NpmAuditResponse);
}

message NpmAuditResponse {
  bool success = 1;
}

message NpmAuditRequest {
  string project_name = 1;
  NpmAuditResult result = 2;
}

message NpmAuditResult {
  int32 audit_report_version = 1;
  map<string, Vulnerability> vulnerabilities = 2;
  Metadata metadata = 3;
}
message Vulnerability {
  string name = 1;
  string severity = 2;
  bool is_direct = 3;
  repeated string via = 4;
  repeated string effects = 5;
  string range = 6;
  repeated string nodes = 7;
  FixAvailable fix_available = 8;
}

message FixAvailable {
  string name = 1;
  string version = 2;
  bool is_sem_ver_major = 3;
}

message Metadata {
  VulnerabilitySummary vulnerabilities = 1;
  DependencySummary dependencies = 2;
}

message VulnerabilitySummary {
  int32 info = 1;
  repeated string paths = 2;
}

message AuditSummary {
  int32 info = 1;
  int32 low = 2;
  int32 moderate = 3;
  int32 high = 4;
  int32 critical = 5;
}