// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        v5.29.1
// source: rpc/auditer/service.proto

package auditer

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NpmAuditResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NpmAuditResponse) Reset() {
	*x = NpmAuditResponse{}
	mi := &file_rpc_auditer_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NpmAuditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NpmAuditResponse) ProtoMessage() {}

func (x *NpmAuditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_auditer_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NpmAuditResponse.ProtoReflect.Descriptor instead.
func (*NpmAuditResponse) Descriptor() ([]byte, []int) {
	return file_rpc_auditer_service_proto_rawDescGZIP(), []int{0}
}

func (x *NpmAuditResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type NpmAuditRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectName   string                 `protobuf:"bytes,1,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	Result        *NpmAuditResult        `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NpmAuditRequest) Reset() {
	*x = NpmAuditRequest{}
	mi := &file_rpc_auditer_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NpmAuditRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NpmAuditRequest) ProtoMessage() {}

func (x *NpmAuditRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_auditer_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NpmAuditRequest.ProtoReflect.Descriptor instead.
func (*NpmAuditRequest) Descriptor() ([]byte, []int) {
	return file_rpc_auditer_service_proto_rawDescGZIP(), []int{1}
}

func (x *NpmAuditRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *NpmAuditRequest) GetResult() *NpmAuditResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type NpmAuditResult struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	AuditTime                 int64                  `protobuf:"varint,1,opt,name=audit_time,json=auditTime,proto3" json:"audit_time,omitempty"`
	Metadata                  map[string]*Metadata   `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Vulnerabilities           []*Vulnerability       `protobuf:"bytes,3,rep,name=vulnerabilities,proto3" json:"vulnerabilities,omitempty"`
	TotalDependencies         int32                  `protobuf:"varint,4,opt,name=total_dependencies,json=totalDependencies,proto3" json:"total_dependencies,omitempty"`
	TotalDevDependencies      int32                  `protobuf:"varint,5,opt,name=total_dev_dependencies,json=totalDevDependencies,proto3" json:"total_dev_dependencies,omitempty"`
	TotalOptionalDependencies int32                  `protobuf:"varint,6,opt,name=total_optional_dependencies,json=totalOptionalDependencies,proto3" json:"total_optional_dependencies,omitempty"`
	TotalVulnerabilities      int32                  `protobuf:"varint,7,opt,name=total_vulnerabilities,json=totalVulnerabilities,proto3" json:"total_vulnerabilities,omitempty"`
	Summary                   *AuditSummary          `protobuf:"bytes,8,opt,name=summary,proto3" json:"summary,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *NpmAuditResult) Reset() {
	*x = NpmAuditResult{}
	mi := &file_rpc_auditer_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NpmAuditResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NpmAuditResult) ProtoMessage() {}

func (x *NpmAuditResult) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_auditer_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NpmAuditResult.ProtoReflect.Descriptor instead.
func (*NpmAuditResult) Descriptor() ([]byte, []int) {
	return file_rpc_auditer_service_proto_rawDescGZIP(), []int{2}
}

func (x *NpmAuditResult) GetAuditTime() int64 {
	if x != nil {
		return x.AuditTime
	}
	return 0
}

func (x *NpmAuditResult) GetMetadata() map[string]*Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *NpmAuditResult) GetVulnerabilities() []*Vulnerability {
	if x != nil {
		return x.Vulnerabilities
	}
	return nil
}

func (x *NpmAuditResult) GetTotalDependencies() int32 {
	if x != nil {
		return x.TotalDependencies
	}
	return 0
}

func (x *NpmAuditResult) GetTotalDevDependencies() int32 {
	if x != nil {
		return x.TotalDevDependencies
	}
	return 0
}

func (x *NpmAuditResult) GetTotalOptionalDependencies() int32 {
	if x != nil {
		return x.TotalOptionalDependencies
	}
	return 0
}

func (x *NpmAuditResult) GetTotalVulnerabilities() int32 {
	if x != nil {
		return x.TotalVulnerabilities
	}
	return 0
}

func (x *NpmAuditResult) GetSummary() *AuditSummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

type Metadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []string               `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	mi := &file_rpc_auditer_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_auditer_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_rpc_auditer_service_proto_rawDescGZIP(), []int{3}
}

func (x *Metadata) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type Vulnerability struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Id                  string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Url                 string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Title               string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Severity            string                 `protobuf:"bytes,4,opt,name=severity,proto3" json:"severity,omitempty"`
	VulnerableVersions  []string               `protobuf:"bytes,5,rep,name=vulnerable_versions,json=vulnerableVersions,proto3" json:"vulnerable_versions,omitempty"`
	ModuleName          string                 `protobuf:"bytes,6,opt,name=module_name,json=moduleName,proto3" json:"module_name,omitempty"`
	VulnerableFunctions string                 `protobuf:"bytes,7,opt,name=vulnerable_functions,json=vulnerableFunctions,proto3" json:"vulnerable_functions,omitempty"`
	Cves                []string               `protobuf:"bytes,8,rep,name=cves,proto3" json:"cves,omitempty"`
	Access              string                 `protobuf:"bytes,9,opt,name=access,proto3" json:"access,omitempty"`
	PatchedVersions     string                 `protobuf:"bytes,10,opt,name=patched_versions,json=patchedVersions,proto3" json:"patched_versions,omitempty"`
	Cwe                 string                 `protobuf:"bytes,11,opt,name=cwe,proto3" json:"cwe,omitempty"`
	Findings            []*Finding             `protobuf:"bytes,12,rep,name=findings,proto3" json:"findings,omitempty"`
	Updated             string                 `protobuf:"bytes,13,opt,name=updated,proto3" json:"updated,omitempty"`
	Recommendation      string                 `protobuf:"bytes,14,opt,name=recommendation,proto3" json:"recommendation,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Vulnerability) Reset() {
	*x = Vulnerability{}
	mi := &file_rpc_auditer_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Vulnerability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vulnerability) ProtoMessage() {}

func (x *Vulnerability) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_auditer_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vulnerability.ProtoReflect.Descriptor instead.
func (*Vulnerability) Descriptor() ([]byte, []int) {
	return file_rpc_auditer_service_proto_rawDescGZIP(), []int{4}
}

func (x *Vulnerability) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Vulnerability) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Vulnerability) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Vulnerability) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *Vulnerability) GetVulnerableVersions() []string {
	if x != nil {
		return x.VulnerableVersions
	}
	return nil
}

func (x *Vulnerability) GetModuleName() string {
	if x != nil {
		return x.ModuleName
	}
	return ""
}

func (x *Vulnerability) GetVulnerableFunctions() string {
	if x != nil {
		return x.VulnerableFunctions
	}
	return ""
}

func (x *Vulnerability) GetCves() []string {
	if x != nil {
		return x.Cves
	}
	return nil
}

func (x *Vulnerability) GetAccess() string {
	if x != nil {
		return x.Access
	}
	return ""
}

func (x *Vulnerability) GetPatchedVersions() string {
	if x != nil {
		return x.PatchedVersions
	}
	return ""
}

func (x *Vulnerability) GetCwe() string {
	if x != nil {
		return x.Cwe
	}
	return ""
}

func (x *Vulnerability) GetFindings() []*Finding {
	if x != nil {
		return x.Findings
	}
	return nil
}

func (x *Vulnerability) GetUpdated() string {
	if x != nil {
		return x.Updated
	}
	return ""
}

func (x *Vulnerability) GetRecommendation() string {
	if x != nil {
		return x.Recommendation
	}
	return ""
}

type Finding struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Paths         []string               `protobuf:"bytes,2,rep,name=paths,proto3" json:"paths,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Finding) Reset() {
	*x = Finding{}
	mi := &file_rpc_auditer_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Finding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Finding) ProtoMessage() {}

func (x *Finding) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_auditer_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Finding.ProtoReflect.Descriptor instead.
func (*Finding) Descriptor() ([]byte, []int) {
	return file_rpc_auditer_service_proto_rawDescGZIP(), []int{5}
}

func (x *Finding) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Finding) GetPaths() []string {
	if x != nil {
		return x.Paths
	}
	return nil
}

type AuditSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Info          int32                  `protobuf:"varint,1,opt,name=info,proto3" json:"info,omitempty"`
	Low           int32                  `protobuf:"varint,2,opt,name=low,proto3" json:"low,omitempty"`
	Moderate      int32                  `protobuf:"varint,3,opt,name=moderate,proto3" json:"moderate,omitempty"`
	High          int32                  `protobuf:"varint,4,opt,name=high,proto3" json:"high,omitempty"`
	Critical      int32                  `protobuf:"varint,5,opt,name=critical,proto3" json:"critical,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuditSummary) Reset() {
	*x = AuditSummary{}
	mi := &file_rpc_auditer_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuditSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditSummary) ProtoMessage() {}

func (x *AuditSummary) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_auditer_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditSummary.ProtoReflect.Descriptor instead.
func (*AuditSummary) Descriptor() ([]byte, []int) {
	return file_rpc_auditer_service_proto_rawDescGZIP(), []int{6}
}

func (x *AuditSummary) GetInfo() int32 {
	if x != nil {
		return x.Info
	}
	return 0
}

func (x *AuditSummary) GetLow() int32 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *AuditSummary) GetModerate() int32 {
	if x != nil {
		return x.Moderate
	}
	return 0
}

func (x *AuditSummary) GetHigh() int32 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *AuditSummary) GetCritical() int32 {
	if x != nil {
		return x.Critical
	}
	return 0
}

var File_rpc_auditer_service_proto protoreflect.FileDescriptor

var file_rpc_auditer_service_proto_rawDesc = []byte{
	0x0a, 0x19, 0x72, 0x70, 0x63, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x65, 0x72, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x74, 0x6f, 0x66,
	0x72, 0x61, 0x6c, 0x65, 0x79, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x75, 0x64,
	0x69, 0x74, 0x65, 0x72, 0x22, 0x2c, 0x0a, 0x10, 0x4e, 0x70, 0x6d, 0x41, 0x75, 0x64, 0x69, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x22, 0x75, 0x0a, 0x0f, 0x4e, 0x70, 0x6d, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x6f, 0x66, 0x72, 0x61,
	0x6c, 0x65, 0x79, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74,
	0x65, 0x72, 0x2e, 0x4e, 0x70, 0x6d, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xcf, 0x04, 0x0a, 0x0e, 0x4e, 0x70,
	0x6d, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x61, 0x75, 0x64, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x51, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e,
	0x74, 0x6f, 0x66, 0x72, 0x61, 0x6c, 0x65, 0x79, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x79, 0x2e,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x4e, 0x70, 0x6d, 0x41, 0x75, 0x64, 0x69, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x50,
	0x0a, 0x0f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x74, 0x6f, 0x66, 0x72, 0x61, 0x6c,
	0x65, 0x79, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x65,
	0x72, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52,
	0x0f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x12, 0x2d, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12,
	0x34, 0x0a, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x76, 0x5f, 0x64, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x76, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65,
	0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x1b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e,
	0x63, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x19, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65,
	0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x76,
	0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x75, 0x6c, 0x6e, 0x65,
	0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x07, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x6f,
	0x66, 0x72, 0x61, 0x6c, 0x65, 0x79, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x1a, 0x5e, 0x0a, 0x0d, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x37,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x74, 0x6f, 0x66, 0x72, 0x61, 0x6c, 0x65, 0x79, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x79, 0x2e,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x22, 0x0a, 0x08, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22,
	0xd1, 0x03, 0x0a, 0x0d, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x76,
	0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x76,
	0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x2f, 0x0a, 0x13, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x12, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x14, 0x76, 0x75, 0x6c, 0x6e, 0x65,
	0x72, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x6c,
	0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x76,
	0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x63, 0x76, 0x65, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x77, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x63, 0x77, 0x65, 0x12, 0x3c, 0x0a, 0x08, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x6f, 0x66, 0x72, 0x61, 0x6c, 0x65, 0x79,
	0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x65, 0x72, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x72,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x39, 0x0a, 0x07, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x68,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x22, 0x80,
	0x01, 0x0a, 0x0c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x6c, 0x6f, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x68, 0x69, 0x67, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x32, 0x70, 0x0a, 0x07, 0x41, 0x75, 0x64, 0x69, 0x74, 0x65, 0x72, 0x12, 0x65, 0x0a, 0x0e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x70, 0x6d, 0x41, 0x75, 0x64, 0x69, 0x74, 0x12, 0x28,
	0x2e, 0x74, 0x6f, 0x66, 0x72, 0x61, 0x6c, 0x65, 0x79, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x79,
	0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x65, 0x72, 0x2e, 0x4e, 0x70, 0x6d, 0x41, 0x75, 0x64, 0x69,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x74, 0x6f, 0x66, 0x72, 0x61,
	0x6c, 0x65, 0x79, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74,
	0x65, 0x72, 0x2e, 0x4e, 0x70, 0x6d, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x74, 0x6f, 0x66, 0x72, 0x61, 0x6c, 0x65, 0x79, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74,
	0x79, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x65, 0x72, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_auditer_service_proto_rawDescOnce sync.Once
	file_rpc_auditer_service_proto_rawDescData = file_rpc_auditer_service_proto_rawDesc
)

func file_rpc_auditer_service_proto_rawDescGZIP() []byte {
	file_rpc_auditer_service_proto_rawDescOnce.Do(func() {
		file_rpc_auditer_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_auditer_service_proto_rawDescData)
	})
	return file_rpc_auditer_service_proto_rawDescData
}

var file_rpc_auditer_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_rpc_auditer_service_proto_goTypes = []any{
	(*NpmAuditResponse)(nil), // 0: tofraley.audity.auditer.NpmAuditResponse
	(*NpmAuditRequest)(nil),  // 1: tofraley.audity.auditer.NpmAuditRequest
	(*NpmAuditResult)(nil),   // 2: tofraley.audity.auditer.NpmAuditResult
	(*Metadata)(nil),         // 3: tofraley.audity.auditer.Metadata
	(*Vulnerability)(nil),    // 4: tofraley.audity.auditer.Vulnerability
	(*Finding)(nil),          // 5: tofraley.audity.auditer.Finding
	(*AuditSummary)(nil),     // 6: tofraley.audity.auditer.AuditSummary
	nil,                      // 7: tofraley.audity.auditer.NpmAuditResult.MetadataEntry
}
var file_rpc_auditer_service_proto_depIdxs = []int32{
	2, // 0: tofraley.audity.auditer.NpmAuditRequest.result:type_name -> tofraley.audity.auditer.NpmAuditResult
	7, // 1: tofraley.audity.auditer.NpmAuditResult.metadata:type_name -> tofraley.audity.auditer.NpmAuditResult.MetadataEntry
	4, // 2: tofraley.audity.auditer.NpmAuditResult.vulnerabilities:type_name -> tofraley.audity.auditer.Vulnerability
	6, // 3: tofraley.audity.auditer.NpmAuditResult.summary:type_name -> tofraley.audity.auditer.AuditSummary
	5, // 4: tofraley.audity.auditer.Vulnerability.findings:type_name -> tofraley.audity.auditer.Finding
	3, // 5: tofraley.audity.auditer.NpmAuditResult.MetadataEntry.value:type_name -> tofraley.audity.auditer.Metadata
	1, // 6: tofraley.audity.auditer.Auditer.RecordNpmAudit:input_type -> tofraley.audity.auditer.NpmAuditRequest
	0, // 7: tofraley.audity.auditer.Auditer.RecordNpmAudit:output_type -> tofraley.audity.auditer.NpmAuditResponse
	7, // [7:8] is the sub-list for method output_type
	6, // [6:7] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_rpc_auditer_service_proto_init() }
func file_rpc_auditer_service_proto_init() {
	if File_rpc_auditer_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_auditer_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_auditer_service_proto_goTypes,
		DependencyIndexes: file_rpc_auditer_service_proto_depIdxs,
		MessageInfos:      file_rpc_auditer_service_proto_msgTypes,
	}.Build()
	File_rpc_auditer_service_proto = out.File
	file_rpc_auditer_service_proto_rawDesc = nil
	file_rpc_auditer_service_proto_goTypes = nil
	file_rpc_auditer_service_proto_depIdxs = nil
}
